title Restaurant Orders

actor User
participant Main
participant Restaurant
participant Serialization
participant OrderWrapper
participant Order
participant Item


User -> Main : select "Add Order"
Main -> Restaurant : addOrder(map)
Restaurant -> User : prompt "Load order"
User -> Restaurant : enter filename
Restaurant -> Serialization : readOrder(filename)
Serialization --> Restaurant : OrderWrapper
Restaurant -> OrderWrapper : getOrder()
OrderWrapper --> Restaurant : Order
Restaurant -> Order : setOrderId(ID)
Restaurant -> map : put(ID, OrderWrapper)


User -> Main : select "Start Order"
Main -> Resturant : startOrder(map)
Resturant -> User : "Enter Order ID"
User -> Resturant : orderID
Resturant -> OrderWrapper : getOrder()
OrderWrapper --> Resturant : Order
Resturant -> Order : getOrderStatus()
alt if status == 1
  Resturant -> Order : setOrderStatus(2)
  Resturant -> User : "Order is starting"
else
  Resturant -> User : "Already started or completed"
end


User -> Main : select "Complete Order"
Main -> Restaurant : completeOrder(map)
Restaurant -> User : "Enter Order ID"
User -> Restaurant : orderID
Resturant -> OrderWrapper : getOrder()
OrderWrapper --> Resturant : Order
Resturant -> Order : getOrderStatus()
alt if status == 2
  Resturant -> Order : setOrderStatus(3)
  Resturant -> User : "Order completed"
else
  Resturant -> User : "Not started or already done"
end


User -> Main : select "Display Order"
Main -> Resturant : display(map)
Resturant -> User : "Enter Order ID"
User -> Resturant : orderID
Resturant -> OrderWrapper : getOrder()
OrderWrapper --> Resturant : Order
Resturant -> Order : getItems()
Order --> Resturant : List<Item>
loop for each Item
  Resturant -> Item : getName()
  Item --> Resturant : name
  Resturant -> Item : getQuantity()
  Item --> Resturant : quantity
  Resturant -> User : print "name - quantity"
end


User -> Main : select "Incomplete Orders"
Main -> Resturant : incompleteOrder(map)
loop for each OrderWrapper
  Resturant -> OrderWrapper : getOrder()
  OrderWrapper --> Resturant : Order
  Resturant -> Order : getItems()
  Order --> Resturant : List<Item>
  loop for each Item
    Resturant -> Item : getPrice()
    Item --> Resturant : price
  end
  Resturant -> User : print order + total
end


User -> Main : select "Print All Orders"
Main -> Serialization : writeOrder(map, file)
Serialization -> ObjectMapper : writeValue(file, map)
ObjectMapper --> Serialization : success
Serialization --> Main : return
Main -> User : "File Exported Successfully"
